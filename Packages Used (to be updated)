# list of packages (to be updated)
library(readxl)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(tidyr)
library(plotly)
library(scatterplot3d)
library(wesanderson)
library(agricolae)
library(FactoMineR)
library(factoextra)





# install.packages() and library()
### You will only need to install the package once throughout the whole use of your RStudio -> install.packages()
### You will need to library the package EVERY TIME after you close your current session -> library()
        # i.e., You are using tidyverse for the first time, and you want to format your table. -> first install.packages("tidyverse"), then library(tidyverse)
        # i.e., You closed your RStudio on Monday, and want to continue working on it. -> only run library(), don't have to run install.packages()





# packages used

## default functions in R
### basic functions embedded in RStudio, do not need to install packages

### common commands:
View() # pull up a dataframe existed in your environment in table format
summary # pull up a summary of data analysis you just run
str() # see dataframe (also often abbreviated as df) structure, inspect list, check variable types (numeric, character, or factor)
t.test() # run t-test
aov() # run ANOVA


## readxl
### to import your excel file into RStudio
install.packages("readxl")
library(readxl)



## tidyverse
### //!important!// a collection of multiple R packages (including ggplot2, dplyr, tidyr, readr, purrr, tibble, stringr, forcats), where each of the packages have their own purposes/uses
### however, RStudio can glitch occasionally, so it's encouraged to load each package individually with library() to ensure everything works smoothly
install.packages("tidyverse")
library(tidyverse)
#### see link for more information for tidyverse: https://www.tidyverse.org/packages/



## dplyr
### to manipulate data frame or tibbles
library(dplyr)

### common commands:
filter() # to select specific rows based on conditions
select() # to choose specific columns
mutate() # to create or transform columns
summarize()/summarise() # to calculate summary statistics like mean, sum, etc.
group_by() # to group data by one or more variables
arrange() # to sort rows in ascending or descending order
#### see link for detailed cheatsheet for dplyr: https://github.com/rstudio/cheatsheets/blob/main/data-transformation.pdf



## ggplot2
### to visualize data
library(ggplot2)

### common commands:
geom_histogram # histogram
geom_point # scatter plot
geom_jitter # improve visual clarity of scatter plot by shifting points
#### see link for detailed cheatsheet for ggplot2: https://github.com/rstudio/cheatsheets/blob/main/data-visualization.pdf



## tidyr
### to tidy data
library(tidyr)

### common commands:
pivot_longer # lengthen data by collapsing multiple columns into 2 columns, i.e., formatting yogurt table - product column and liking column
pivot_wider # reverse of pivot_longer, widen data by expanding 2 columns into multiple columns
drop_na # drop rows containing missing values (NA or N/A)
#### see link for detailed cheatsheet for tidyr: https://github.com/rstudio/cheatsheets/blob/main/tidyr.pdf



## plotly
### to make graphs (interactive 3 dimension MLR model in discussion 3)
install.packages("plotly")
library(plotly)



## scatterplot3d
### to make graphs (non-interactive 3 dimension MLR model in discussion 3)
install.packages("scatterplot3d")
library(scatterplot3d)



## wesanderson
### to change color of plot
install.packages("wesanderson")
library(wesanderson)



## agricolae
## to run a variety of statistical analyses (especially for experimental design and ANOVA)
install.packages("agricolae")
library(agricolae)

### common commands:
LSD.test() # multiple comparison, LSD and Bonferroni
HSD.test() # multiple comparison, Tukey



## FactoMineR
## to run multivariate data analyses (very often used in sensory science)
install.packages("FactoMineR")
library(FactoMineR)

### common commands:
PCA() # perform PCA (principal component analysis)



## factoextra
## to visualize multivariate data analyses (transform data into plots for easier understanding)
install.packages("factoextra")
library(factoextra)

### common commands:
get_eigenvalue() # get eigenvalue
fviz_screeplot() # generate Scree plot (a plot visualizing eigenvalues)
fviz_pca_biplot() # generate Bi-plot


